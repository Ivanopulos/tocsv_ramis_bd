# -*- coding: utf-8 -*-
import pandas as pd
import os
from tkinter import filedialog
import numpy as np
import re
from io import StringIO
def try_convert_numeric(value):#иначе с цсв всё текстом тащит и не вычисляет
    if isinstance(value, str):
        try:
            if re.match(r'^\d+,\d+$', value):
                value = value.replace(',', '.')
            return pd.to_numeric(value)
        except ValueError:
            return value
    else:
        return value
#Регион1
path = filedialog.askopenfilename()
with open(path, 'r', encoding='utf-8') as infile:
    lines = infile.readlines()
    lines = [re.sub(r'[\000-\010]|[\013-\014]|[\016-\037]', "", line) for line in lines]
split_index = -1
keyword = 'Регион1'
for i, line in enumerate(lines):
    if keyword in line:
        split_index = i
        print(i, line)
        break
if split_index == -1:
    print(f'Ключевое слово "{keyword}" не найдено в файле.')
else:
    # Разделение списка строк на две части
    first_part_lines = lines[:split_index]
    second_part_lines = lines[split_index:]
    # Преобразование списка строк в строку
    first_part_lines_str = ''.join(first_part_lines)
    second_part_lines_str = ''.join(second_part_lines)
    # Создание объекта файла из строки
    first_part_lines_file = StringIO(first_part_lines_str)
    second_part_lines_file = StringIO(second_part_lines_str)
    # Чтение объекта файла с помощью pd.read_csv()
    rtable = pd.read_csv(first_part_lines_file)
    ltable = pd.read_csv(second_part_lines_file)

print("съел файл")
ltable = ltable.dropna(axis=1, how='all')  # убираем пустые столбцы
rtable = rtable.drop(['Регион3', 'Код1', 'Учреждение3', 'Название_проекта_по_улучшению1'], axis=1)  # столбцы поп которым идет задвоение
ltable.reset_index(drop=True, inplace=True)
rtable.reset_index(drop=True, inplace=True)
ltable = ltable.join(rtable)

ltable['Регион1'] = ltable['Регион1'].fillna(1)  # хз как зацепиться за НаН, пришлось менять на 1, чтобы продублировать название региона
for i in range(len(ltable)):
    if ltable.loc[i]['Регион1'] == 1:
        ltable.loc[i]['Регион1'] = ltable.loc[i-1]['Регион1']
ltable.columns = ['Регион', 'Код МО', 'Наименование структурного подразделения медицинской организации', 'Обслуживаемое население','Количество работников, устроенных по основному месту работы в структурном подразделении медицинской организации, на начало календарного года','Количество работников, из числа устроенных по основному месту работы в структурном подразделении медицинской организации, обученных методам и инструментам бережливого производства (наличие документа о повышении квалификации), на момент подачи отчета','Название проекта по улучшению','Улучшаемый процесс','Улучшаемый процесс (другое)','Улучшаемый подпроцесс','Улучшаемый подпроцесс (другое)','Наименование показателя в соответствии с паспортом проекта по улучшению ','Наименование показателя (другое)','Единица измерения','Единица измерения (другое)','Целевое значение  (в соответствии с паспортом проекта по улучшению)','Исходное значение (на момент открытия проекта в соответствии с паспортом)','Достигнутое значение (на момент закрытия проекта)','Дата открытия проекта','Плановая дата закрытия проекта (в соответствии с паспортом проекта по улучшению)','Фактическая дата закрытия проекта',' Этап  реализации проекта','Полученный экономический эффект','Связь проекта с организацией медицинской помощи в условиях COVID 19','Руководителя заместителя руководителя медицинской организации','Работника РЦ ПМСП','Форма стандарта','Форма стандарта (другое)','Наименование стандарта','id проекта','Статус']
#ltable = ltable.loc[ltable['Регион'] != "ФМБА России"]
ltable = ltable.applymap(try_convert_numeric)
print('преобразовал в числа')
ltable['Дата открытия проекта'] = pd.to_datetime(ltable['Дата открытия проекта'], errors='coerce', dayfirst=True)
ltable['Плановая дата закрытия проекта (в соответствии с паспортом проекта по улучшению)'] = pd.to_datetime(ltable['Плановая дата закрытия проекта (в соответствии с паспортом проекта по улучшению)'], errors='coerce', dayfirst=True)
ltable['Фактическая дата закрытия проекта'] = pd.to_datetime(ltable['Фактическая дата закрытия проекта'], errors='coerce', dayfirst=True)
print('преобразовал даты')

tek1s = ['Регион', 'Код МО', "Наименование структурного подразделения медицинской организации", "Обслуживаемое население", "Количество работников, устроенных по основному месту работы в структурном подразделении медицинской организации, на начало календарного года", "Количество работников, из числа устроенных по основному месту работы в структурном подразделении медицинской организации, обученных методам и инструментам бережливого производства (наличие документа о повышении квалификации), на момент подачи отчета"]
Tek1 = ltable[tek1s] #, "Код МО", "Наименование структурного подразделения медицинской организации", "Обслуживаемое население", "Количество работников, устроенных по основному месту работы в структурном подразделении медицинской организации, на начало календарного года", "Количество работников, из числа устроенных по основному месту работы в структурном подразделении медицинской организации, обученных методам и инструментам бережливого производства (наличие документа о повышении квалификации), на момент подачи отчета"]
Tek1 = Tek1.fillna("нет данных1")
Tek1 = Tek1.groupby(tek1s).size().reset_index(name='дублей')
Tek1 = Tek1.replace({"нет данных1": ""})
print("1 есть")

#snl_session("tek1.pkl")
tek2s = ["Код МО", "id проекта",  "Название проекта по улучшению", "Улучшаемый процесс", "Улучшаемый процесс (другое)", "Улучшаемый подпроцесс", "Улучшаемый подпроцесс (другое)", "Дата открытия проекта", "Плановая дата закрытия проекта (в соответствии с паспортом проекта по улучшению)", "Фактическая дата закрытия проекта", " Этап  реализации проекта", "Полученный экономический эффект", "Связь проекта с организацией медицинской помощи в условиях COVID 19", "Руководителя заместителя руководителя медицинской организации", "Работника РЦ ПМСП"]
Tek2 = ltable[tek2s]
# Tek2.loc[:, ["Срок реализации проекта", "Количество разработанных стандартов", "Соответствие даты закрытия плановой дате", "Дата, предшествующая отчетному периоду"]] = ""
# Tek2 = Tek2.join(ltable[["Полученный экономический эффект", "Связь проекта с организацией медицинской помощи в условиях COVID 19", "Руководителя заместителя руководителя медицинской организации", "Работника РЦ ПМСП"]])
# Tek2["Ищем прочих в базе"] = ""
# Tek2 = Tek2.join(ltable["Обслуживаемое население"])
tek2s.extend(("Полученный экономический эффект", "Связь проекта с организацией медицинской помощи в условиях COVID 19", "Руководителя заместителя руководителя медицинской организации", "Работника РЦ ПМСП", "Обслуживаемое население"))
Tek2 = Tek2.fillna("нет данных1")
Tek2 = Tek2.groupby(list(Tek2.columns)).size().reset_index(name='дублей')
Tek2 = Tek2.replace({"нет данных1": ""})
print("2 есть")

#snl_session("tek2.pkl")
# tek3s = ["Код МО", "Название проекта по улучшению", "Улучшаемый процесс", "Улучшаемый процесс (другое)", "Улучшаемый подпроцесс", "Улучшаемый подпроцесс (другое)", "Дата открытия проекта", "Плановая дата закрытия проекта (в соответствии с паспортом проекта по улучшению)", "Фактическая дата закрытия проекта", "Форма стандарта", "Форма стандарта (другое)", "Наименование стандарта"]
tek3s = ["id проекта", "Наименование показателя в соответствии с паспортом проекта по улучшению ", "Наименование показателя (другое)", "Единица измерения", "Единица измерения (другое)", "Целевое значение  (в соответствии с паспортом проекта по улучшению)", "Исходное значение (на момент открытия проекта в соответствии с паспортом)", "Достигнутое значение (на момент закрытия проекта)"]
Tek3 = ltable[tek3s]
Tek3 = Tek3.fillna("нет данных1")

Tek3 = Tek3.groupby(list(Tek3.columns)).size().reset_index(name='дублей')
Tek3 = Tek3.replace({"нет данных1": ""})
#Tek3['Степень достижения'] = np.arange(2, 2 + len(Tek3))
#Tek3['Степень достижения'] = "=ABS(F" + Tek3['Степень достижения'] + "-G" + Tek3['Степень достижения'] + ")/ABS(H" + Tek3['Степень достижения'] + "-G" + Tek3['Степень достижения'] + ")"
#Tek3['Степень достижения'] = abs(Tek3["Целевое значение  (в соответствии с паспортом проекта по улучшению)"]-Tek3["Исходное значение (на момент открытия проекта в соответствии с паспортом)"])/abs(Tek3["Достигнутое значение (на момент закрытия проекта)"]-Tek3["Исходное значение (на момент открытия проекта в соответствии с паспортом)"])
Tek3['Степень достижения'] = ""

#Tek3["Целевое значение  (в соответствии с паспортом проекта по улучшению)"] = pd.to_numeric(Tek3["Целевое значение  (в соответствии с паспортом проекта по улучшению)"])
#Tek3["Исходное значение (на момент открытия проекта в соответствии с паспортом)"]


for i in range(len(Tek3)):
    try:
        Tek3.iloc[i, 9] = (Tek3.iloc[i, 7]-Tek3.iloc[i, 6])/(Tek3.iloc[i, 5]-Tek3.iloc[i, 6])
    except:
        asd = 0
cols = Tek3.columns.tolist()  # Перестановка последнего столбца
cols.insert(len(cols)-2, cols[-1])
cols = cols[:-1]
Tek3 = Tek3[cols]  #
print("3 есть")

tek4s = ["id проекта", "Форма стандарта", "Форма стандарта (другое)", "Наименование стандарта"]
Tek4 = ltable[tek4s]
Tek4 = Tek4.fillna("нет данных1")
Tek4 = Tek4.groupby(list(Tek4.columns)).size().reset_index(name='дублей')
Tek4 = Tek4.replace({"нет данных1": ""})
print("4 есть, сохранение итога..")


with pd.ExcelWriter('Итог.xlsx') as writer:
    Tek1.to_excel(writer, sheet_name='Текущ 1', index=False)
    Tek2.to_excel(writer, sheet_name='Текущ 2', index=False)
    Tek3.to_excel(writer, sheet_name='Текущ 3', index=False)
    Tek4.to_excel(writer, sheet_name='Текущ 4', index=False)
print("итог есть, сохранение исходника..")
ltable.to_excel('Исх с фмба.xlsx', sheet_name='прикольно получилось', index=False)
print("исходник с фмба есть, всё готово")
sec = input()




#vf = pd.read_csv(path)
#print(vf)